{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Alfresco-zez Stack",
  "Metadata": {
    "TemplateAuthor": "Abraham Ogba",
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Infrastructure deployment"
          },
          "Parameters": [
            "Environment"
          ]
        },
        {
          "Label": {
            "default": "alfresco-cft"
          },
          "Parameters": [
            "Stackname",
            "IamRole"
          ]
        }
      ],
      "ParametersLabels": {
        "Environment": {
          "default": "Environment:"
        },
        "StackName": {
          "default": "alfresco"
        },
        "IamRole": {
          "default": "ec2-access-ecs"
        }
      }
    }
  },
  "Parameters": {
    "Environment": {
      "Type": "String",
      "Default": "qa",
      "AllowedValues": [
        "qa",
        "dev"
      ]
    },
    "StackName": {
      "Type": "String",
      "Default": "alfresco"
    },
    "AmiId": {
      "Type": "String",
      "Default": "ami-099eea36c6bc666a9"
    },
    "IamRole": {
      "Type": "String",
      "Default": "ec2-access-ecs"
    }
  },
  "Mappings": {
    "environment": {
      "qa": {
        "VpcId": "vpc-3407ba4c",
        "VPCSubnet1": "subnet-445ba919",
        "VPCSubnet2": "subnet-46aa3b22",
        "SSLCert": "arn:aws:acm:us-east-1:187212085277:certificate/f6f82b33-4b58-47fb-9f4d-8984c93aae0c",
        "AlfrescologGroup": "/ecs/qa-zez-alfresco",
        "SharelogGroup": "/ecs/qa-zez-share",
        "DownloadlogGroup": "/ecs/qa-zez-download",
        "TokenlogGroup": "/ecs/qa-zez-token",
        "PdftronserverlogGroup": "/ecs/qa-zez-pdftronserver",
        "PdftronclientlogGroup": "/ecs/qa-zez-pdftronclient"
      },
      "dev": {
        "VpcId": "vpc-0344f3d7fbe904f2a",
        "VPCSubnet1": "subnet-094b2028c130f5042",
        "VPCSubnet2": "subnet-0fea883f5a4d5394e",
        "SSLCert": "arn:aws:acm:us-east-1:187212085277:certificate/f6f82b33-4b58-47fb-9f4d-8984c93aae0c",
        "AlfrescologGroup": "/ecs/dev-zez-alfresco",
        "SharelogGroup": "/ecs/dev-zez-share",
        "DownloadlogGroup": "/ecs/dev-zez-download",
        "TokenlogGroup": "/ecs/dev-zez-token",
        "PdftronserverlogGroup": "/ecs/dev-zez-pdftronserver",
        "PdftronclientlogGroup": "/ecs/dev-zez-pdftronclient"
      }
    }
  },
  "Resources": {
    "Topic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "${Environment}-alfresco-zez-alb",
        "TopicName": "${Environment}-alfresco-zez-alb"
      }
    },
    "LoadBalancerInternal": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": "${Environment}-alfresco-zez-internal",
        "Scheme": "internal",
        "Subnets": [
          [
            "environment",
            "Environment",
            "VPCSubnet1"
          ],
          [
            "environment",
            "Environment",
            "VPCSubnet2"
          ]
        ],
        "SecurityGroups": [
          "Port443SG",
          "Port8080SG",
          "Port8090SG",
          "Port7180SG"
        ]
      }
    },
    "LoadBalancerListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "LoadBalancerArn": "LoadBalancerInternal",
        "Port": 443,
        "Protocol": "HTTPS",
        "Certificates": [
          {
            "CertificateArn": [
              "environment",
              "Environment",
              "SSLCert"
            ]
          }
        ],
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": "AlfrescoTargetGroup"
          }
        ]
      }
    },
    "LoadBalancerListenerHTTP": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "LoadBalancerArn": "LoadBalancerInternal",
        "Port": 8080,
        "Protocol": "HTTP",
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": "AlfrescoTargetGroup"
          }
        ]
      }
    },
    "ExternalLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "Name": "${Environment}-alfresco-zez-public",
        "Subnets": [
          [
            "environment",
            "Environment",
            "VPCSubnet1"
          ],
          [
            "environment",
            "Environment",
            "VPCSubnet2"
          ]
        ],
        "SecurityGroups": [
          "Port443SG",
          "Port8080SG",
          "Port8090SG",
          "Port7180SG"
        ]
      }
    },
    "ExternalLoadBalancerListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "LoadBalancerArn": "ExternalLoadBalancer",
        "Port": 443,
        "Protocol": "HTTPS",
        "Certificates": [
          {
            "CertificateArn": [
              "environment",
              "Environment",
              "SSLCert"
            ]
          }
        ],
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": "ExternalDownloadTargetGroup"
          }
        ]
      }
    },
    "AlfrescoTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "${Environment}-alfresco-zez-alfresco",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetType": "instance",
        "Matcher": {
          "HttpCode": 302
        },
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/alfresco",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 2,
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": 20
          },
          {
            "Key": "stickiness.enabled",
            "Value": true
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie"
          },
          {
            "Key": "stickiness.lb_cookie.duration_seconds",
            "Value": 86400
          }
        ]
      }
    },
    "ShareTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "${Environment}-alfresco-zez-share",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "Matcher": {
          "HttpCode": 302
        },
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/share",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 2,
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": 20
          },
          {
            "Key": "stickiness.enabled",
            "Value": true
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie"
          },
          {
            "Key": "stickiness.lb_cookie.duration_seconds",
            "Value": 86400
          }
        ]
      }
    },
    "DownloadTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "${Environment}-alfresco-zez-download",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "Matcher": {
          "HttpCode": 302
        },
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/downloadservice",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 2,
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": 20
          },
          {
            "Key": "stickiness.enabled",
            "Value": true
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie"
          },
          {
            "Key": "stickiness.lb_cookie.duration_seconds",
            "Value": 86400
          }
        ]
      }
    },
    "ExternalDownloadTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "${Environment}-alfresco-zez-download-ext",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "Matcher": {
          "HttpCode": 302
        },
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/downloadservice",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 2,
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": 20
          },
          {
            "Key": "stickiness.enabled",
            "Value": true
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie"
          },
          {
            "Key": "stickiness.lb_cookie.duration_seconds",
            "Value": 86400
          }
        ]
      }
    },
    "TokenTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "${Environment}-alfresco-zez-token",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "Matcher": {
          "HttpCode": 302
        },
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/tokenservice",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 2,
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": 20
          },
          {
            "Key": "stickiness.enabled",
            "Value": true
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie"
          },
          {
            "Key": "stickiness.lb_cookie.duration_seconds",
            "Value": 86400
          }
        ]
      }
    },
    "PDFTronServerTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "${Environment}-alfresco-zez-pdftronserver",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "Port": 8090,
        "Protocol": "HTTP",
        "TargetType": "instance",
        "Matcher": {
          "HttpCode": 404
        },
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 2,
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": 20
          },
          {
            "Key": "stickiness.enabled",
            "Value": true
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie"
          },
          {
            "Key": "stickiness.lb_cookie.duration_seconds",
            "Value": 86400
          }
        ]
      }
    },
    "PDFTronClientTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "${Environment}-alfresco-zez-pdftronclient",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "Matcher": {
          "HttpCode": 302
        },
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 2,
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": 20
          },
          {
            "Key": "stickiness.enabled",
            "Value": true
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie"
          },
          {
            "Key": "stickiness.lb_cookie.duration_seconds",
            "Value": 86400
          }
        ]
      }
    },
    "PreviewListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "PDFTronClientTargetGroup"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "Values": [
              "/preview/*"
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 1
      }
    },
    "LibListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "PDFTronClientTargetGroup"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "Values": [
              "/lib/*"
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 2
      }
    },
    "DataListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "PDFTronServerTargetGroup"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "Values": [
              "/data/*"
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 3
      }
    },
    "BlackBoxListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "PDFTronServerTargetGroup"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "Values": [
              "/blackbox/*"
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 4
      }
    },
    "AlfrescoListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "AlfrescoTargetGroup"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "Values": [
              [
                "",
                [
                  "alfresco-zez-",
                  "Environment",
                  ".oscarose.org"
                ]
              ]
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 5
      }
    },
    "ShareListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "ShareTargetGroup"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "Values": [
              [
                "",
                [
                  "alfresco-share-",
                  "Environment",
                  ".srrcbsb.org"
                ]
              ]
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 6
      }
    },
    "TokenListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "TokenTargetGroup"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "Values": [
              [
                "",
                [
                  "alfresco-tokenservices-zez-",
                  "Environment",
                  ".oscarose.org"
                ]
              ]
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 7
      }
    },
    "DownloadListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": "DownloadTargetGroup"
          }
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "Values": [
              [
                "",
                [
                  "alfresco-zez-downloadservice-",
                  "Environment",
                  ".oscarose.org"
                ]
              ]
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 8
      }
    },
    "AlfrescoListenerRuleInternal": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "AlfrescoTargetGroup"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "Values": [
              [
                "",
                [
                  "alfresco-zez-",
                  "Environment",
                  "-internal.oscarose.org"
                ]
              ]
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 9
      }
    },
    "ShareListenerRuleInternal": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "ShareTargetGroup"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "Values": [
              [
                "",
                [
                  "alfresco-share-zez-",
                  "Environment",
                  "-internal.oscarose.org"
                ]
              ]
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 10
      }
    },
    "TokenListenerRuleInternal": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "TokenTargetGroup"
            }
          }
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "Values": [
              [
                "",
                [
                  "alfresco-tokenservice-zez-",
                  "Environment",
                  "-internal.oscarose.org"
                ]
              ]
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 11
      }
    },
    "DownloadListenerRuleInternal": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": "DownloadTargetGroup"
          }
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "Values": [
              [
                "",
                [
                  "alfresco-zez-downloadservice-",
                  "Environment",
                  "-internal.oscarose.org"
                ]
              ]
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 12
      }
    },
    "TronWebServerListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": "PDFTronClientTargetGroup"
          }
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "Values": [
              [
                "",
                [
                  "alfresco-zez-tronwebserver-",
                  "Environment",
                  ".oscarose.org"
                ]
              ]
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 13
      }
    },
    "TronWebServerListenerRuleIternal": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "LoadBalancerListener",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": "PDFTronClientTargetGroup"
          }
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "Values": [
              [
                "",
                [
                  "alfresco-zez-tronwebserver-",
                  "Environment",
                  "-internal.oscarose.org"
                ]
              ]
            ]
          }
        ],
        "ListenerArn": "LoadBalancerListener",
        "Priority": 14
      }
    },
    "Port22SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "10.0.0.0/8"
          }
        ]
      }
    },
    "Port8090SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable pdftronserver port",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "8090",
            "ToPort": "8090",
            "CidrIp": "10.0.0.0/8"
          }
        ]
      }
    },
    "Port7180SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable alfresco port",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "7180",
            "ToPort": "7180",
            "CidrIp": "10.0.0.0/8"
          }
        ]
      }
    },
    "Port443SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTPS",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "10.0.0.0/8"
          }
        ]
      }
    },
    "Port8080SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable alfresco service port",
        "VpcId": [
          "environment",
          "Environment",
          "VpcId"
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 8080,
            "ToPort": 8080,
            "CidrIp": "10.0.0.0/8"
          }
        ]
      }
    },
    "HTTPCodeELB5XXTooHighAlarmInternal": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmName": "${Environment}-alfresco-zez-HTTPCodeELB5XXTooHighAlarmInternal",
        "AlarmDescription": "${Environment}-alfresco-zez internal application load balancer returns 5XX HTTP status codes",
        "TreatMissingData": "notBreaching",
        "Namespace": "AWS/ApplicationELB",
        "MetricName": "HTTPCode_ELB_5XX_Count",
        "Statistic": "Sum",
        "Period": 60,
        "EvaluationPeriods": 2,
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": 0,
        "AlarmActions": [
          "Topic"
        ],
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": "LoadBalancerInternal.LoadBalancerFullName"
          }
        ]
      }
    },
    "HTTPCodeTarget5XXTooHighAlarmInternal": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmName": "${Environment}-alfresco-zez-HTTPCodeTarget5XXTooHighAlarmInternal",
        "AlarmDescription": "${Environment}-alfresco-zez internal application load balancer receives 5XX HTTP status codes from targets",
        "TreatMissingData": "notBreaching",
        "Namespace": "AWS/ApplicationELB",
        "MetricName": "HTTPCode_Target_5XX_Count",
        "Statistic": "Sum",
        "Period": 60,
        "EvaluationPeriods": 2,
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": 0,
        "AlarmActions": [
          "Topic"
        ],
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": "LoadBalancerInternal.LoadBalancerFullName"
          }
        ]
      }
    },
    "RejectedConnectionCountTooHighAlarmInternal": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmName": "${Environment}-alfresco-zez-RejectedConnectionCountTooHighAlarmInternal",
        "AlarmDescription": "${Environment}-alfresco-zez internal application load balancer rejected connections because the load balancer had reached its maximum number of connections",
        "TreatMissingData": "notBreaching",
        "Namespace": "AWS/ApplicationELB",
        "MetricName": "RejectedConnectionCount",
        "Statistic": "Sum",
        "Period": 60,
        "EvaluationPeriods": 2,
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": 0,
        "AlarmActions": [
          "Topic"
        ],
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": "LoadBalancerInternal.LoadBalancerFullName"
          }
        ]
      }
    },
    "TargetConnectionErrorCountTooHighAlarmInternal": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmName": "${Environment}-alfresco-zez-TargetConnectionErrorCountTooHighAlarmInternal",
        "AlarmDescription": "${Environment}-alfresco-zez internal Application load balancer could not connect to targets",
        "TreatMissingData": "notBreaching",
        "Namespace": "AWS/ApplicationELB",
        "MetricName": "TargetConnectionErrorCount",
        "Statistic": "Sum",
        "Period": 60,
        "EvaluationPeriods": 2,
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": 0,
        "AlarmActions": [
          "Topic"
        ],
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": "LoadBalancerInternal.LoadBalancerFullName"
          }
        ]
      }
    },
    "HTTPCodeELB5XXTooHighAlarmExternal": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmName": "${Environment}-alfresco-zez-HTTPCodeELB5XXTooHighAlarmExternal",
        "AlarmDescription": "${Environment}-alfresco-zez External application load balancer returns 5XX HTTP status codes",
        "TreatMissingData": "notBreaching",
        "Namespace": "AWS/ApplicationELB",
        "MetricName": "HTTPCode_ELB_5XX_Count",
        "Statistic": "Sum",
        "Period": 60,
        "EvaluationPeriods": 2,
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": 0,
        "AlarmActions": [
          "Topic"
        ],
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": "ExternalLoadBalancer.LoadBalancerFullName"
          }
        ]
      }
    },
    "HTTPCodeTarget5XXTooHighAlarmExternal": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmName": "${Environment}-alfresco-zez-HTTPCodeTarget5XXTooHighAlarmExternal",
        "AlarmDescription": "${Environment}-alfresco-zez External application load balancer receives 5XX HTTP status codes from targets",
        "TreatMissingData": "notBreaching",
        "Namespace": "AWS/ApplicationELB",
        "MetricName": "HTTPCode_Target_5XX_Count",
        "Statistic": "Sum",
        "Period": 60,
        "EvaluationPeriods": 2,
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": 0,
        "AlarmActions": [
          "Topic"
        ],
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": "ExternalLoadBalancer.LoadBalancerFullName"
          }
        ]
      }
    },
    "RejectedConnectionCountTooHighAlarmExternal": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmName": "${Environment}-alfresco-zez-RejectedConnectionCountTooHighAlarmExternal",
        "AlarmDescription": "${Environment}-alfresco-zez External application load balancer rejected connections because the load balancer had reached its maximum number of connections",
        "TreatMissingData": "notBreaching",
        "Namespace": "AWS/ApplicationELB",
        "MetricName": "RejectedConnectionCount",
        "Statistic": "Sum",
        "Period": 60,
        "EvaluationPeriods": 2,
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": 0,
        "AlarmActions": [
          "Topic"
        ],
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": "ExternalLoadBalancer.LoadBalancerFullName"
          }
        ]
      }
    },
    "TargetConnectionErrorCountTooHighAlarmExternal": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmName": "${Environment}-alfresco-zez-TargetConnectionErrorCountTooHighAlarmExternal",
        "AlarmDescription": "${Environment}-alfresco-zez External Application load balancer could not connect to targets",
        "TreatMissingData": "notBreaching",
        "Namespace": "AWS/ApplicationELB",
        "MetricName": "TargetConnectionErrorCount",
        "Statistic": "Sum",
        "Period": 60,
        "EvaluationPeriods": 2,
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": 0,
        "AlarmActions": [
          "Topic"
        ],
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": "ExternalLoadBalancer.LoadBalancerFullName"
          }
        ]
      }
    },
    "ECSCLUSTER": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "${Environment}-alfresco-zez",
        "Tags": [
          {
            "Key": "OS_Vendor",
            "Value": "Centos7"
          },
          {
            "Key": "CostCenter",
            "Value": "ogba"
          },
          {
            "Key": "OS",
            "Value": "Linux"
          },
          {
            "Key": "VPC",
            "Value": "Environment"
          },
          {
            "Key": "Environment",
            "Value": "noneprod"
          },
          {
            "Key": "Component",
            "Value": "${Environment}-alfresco-zez"
          },
          {
            "Key": "Name",
            "Value": "${Environment}-alfresco-zez"
          }
        ]
      }
    },
    "ECSRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "RoleName": "${Environment}-alfresco-zez-ECSRole",
        "AssumeRolePolicyDocument": "{\n    \"Statement\": [{\n        \"Action\": \"sts:AssumeRole\",\n        \"Effect\": \"Allow\",\n        \"Principal\": {\n            \"Service\": \"ecs-tasks.amazonaws.com\"\n        }\n    }]\n}\n",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
        ],
        "Policies": [
          {
            "PolicyName": "${Environment}-alfresco-zez-ecs-service",
            "PolicyDocument": "{\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"ecr:*\",\n            \"ssm:*\",\n            \"s3:Put*\",\n            \"s3:Get*\",\n            \"cloudwatch:*\",\n            \"logs:*\"\n        ],\n        \"Resource\": \"*\"\n    }]\n}\n"
          }
        ]
      }
    },
    "ECSServiceAutoScalingRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": {
            "Action": [
              "sts:AssumeRole"
            ],
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "application-autoscaling.amazonaws.com"
              ]
            }
          }
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "ecs-service-autoscaling",
            "PolicyDocument": {
              "Statement": {
                "Effect": "Allow",
                "Action": [
                  "application-autoscaling:*",
                  "cloudwatch:DescribeAlarms",
                  "cloudwatch:PutMetricAlarm",
                  "ecs:DescribeServices",
                  "ecs:UpdateService"
                ],
                "Resource": "*"
              }
            }
          }
        ]
      }
    },
    "AlfrescoTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Name": "${Environment}-zez-alfresco",
            "Image": "187212085277.dkr.ecr.us-east-1.amazonaws.com/jenkins:1.0",
            "PortMappings": [
              {
                "ContainerPort": 8080
              },
              {
                "ContainerPort": 7180
              }
            ],
            "Secrets": [
              {
                "Name": "JAVA_OPTS",
                "ValueFrom": "arn:aws:ssm:us-east-1:187212085277:parameter/qa-alfresco"
              }
            ],
            "Memory": 16000,
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": [
                  "environment",
                  "Environment",
                  "AlfrescologGroup"
                ],
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "ecs"
              }
            }
          }
        ],
        "ExecutionRoleArn": "ECSRole",
        "Family": "${Environment}-zez-alfresco",
        "NetworkMode": "host",
        "RequiresCompatibilities": [
          "EC2"
        ],
        "TaskRoleArn": "ECSRole"
      }
    },
    "AlfrescoService": {
      "Type": "AWS::ECS::Service",
      "DependsOn": "AlfrescoListenerRuleInternal",
      "Properties": {
        "ServiceName": "${Environment}-alfresco-alfresco",
        "Cluster": "ECSCLUSTER",
        "LaunchType": "EC2",
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100
        },
        "DesiredCount": 0,
        "HealthCheckGracePeriodSeconds": 60,
        "TaskDefinition": "AlfrescoTaskDefinition",
        "LoadBalancers": [
          {
            "ContainerName": "${Environment}-zez-alfresco",
            "ContainerPort": 8080,
            "TargetGroupArn": "AlfrescoTargetGroup"
          }
        ]
      }
    },
    "AlfrescoShareTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Name": "${Environment}-zez-share",
            "Image": "187212085277.dkr.ecr.us-east-1.amazonaws.com/jenkins:1.0",
            "PortMappings": [
              {
                "ContainerPort": 8080
              }
            ],
            "Environment": [
              {
                "Name": "JAVA_OPTS",
                "Value": "-Xms2g -Xmx2g"
              }
            ],
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": [
                  "environment",
                  "Environment",
                  "SharelogGroup"
                ],
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "ecs"
              }
            }
          }
        ],
        "Cpu": "1vCPU",
        "ExecutionRoleArn": "ECSRole",
        "Family": "${Environment}-zez-share",
        "Memory": "2GB",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": "ECSRole"
      }
    },
    "AlfrescoShareService": {
      "Type": "AWS::ECS::Service",
      "DependsOn": "ShareListenerRuleInternal",
      "Properties": {
        "ServiceName": "${Environment}-alfresco-share",
        "Cluster": "ECSCLUSTER",
        "LaunchType": "FARGATE",
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100
        },
        "DesiredCount": 0,
        "HealthCheckGracePeriodSeconds": 60,
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "SecurityGroups": [
              "Port443SG",
              "Port8080SG",
              "Port8090SG",
              "Port7180SG"
            ],
            "Subnets": [
              [
                "environment",
                "Environment",
                "VPCSubnet1"
              ],
              [
                "environment",
                "Environment",
                "VPCSubnet2"
              ]
            ]
          }
        },
        "TaskDefinition": "AlfrescoShareTaskDefinition",
        "LoadBalancers": [
          {
            "ContainerName": "${Environment}-zez-share",
            "ContainerPort": 8080,
            "TargetGroupArn": "ShareTargetGroup"
          }
        ]
      }
    },
    "AlfrescoTokenTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Name": "${Environment}-zez-token",
            "Image": "187212085277.dkr.ecr.us-east-1.amazonaws.com/jenkins:1.0",
            "PortMappings": [
              {
                "ContainerPort": 8080
              }
            ],
            "Environment": [
              {
                "Name": "JAVA_OPTS",
                "Value": "-Xms2g -Xmx2g"
              }
            ],
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": [
                  "environment",
                  "Environment",
                  "TokenlogGroup"
                ],
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "ecs"
              }
            }
          }
        ],
        "Cpu": "1vCPU",
        "ExecutionRoleArn": "ECSRole",
        "Family": "${Environment}-zez-token",
        "Memory": "2GB",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": "ECSRole"
      }
    },
    "AlfrescoTokenService": {
      "Type": "AWS::ECS::Service",
      "DependsOn": "TokenListenerRuleInternal",
      "Properties": {
        "ServiceName": "${Environment}-alfresco-token",
        "Cluster": "ECSCLUSTER",
        "LaunchType": "FARGATE",
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100
        },
        "DesiredCount": 0,
        "HealthCheckGracePeriodSeconds": 60,
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "SecurityGroups": [
              "Port443SG",
              "Port8080SG",
              "Port8090SG",
              "Port7180SG"
            ],
            "Subnets": [
              [
                "environment",
                "Environment",
                "VPCSubnet1"
              ],
              [
                "environment",
                "Environment",
                "VPCSubnet2"
              ]
            ]
          }
        },
        "TaskDefinition": "AlfrescoTokenTaskDefinition",
        "LoadBalancers": [
          {
            "ContainerName": "${Environment}-zez-token",
            "ContainerPort": 8080,
            "TargetGroupArn": "TokenTargetGroup"
          }
        ]
      }
    },
    "AlfrescoDownloadTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Name": "${Environment}-zez-download",
            "Image": "187212085277.dkr.ecr.us-east-1.amazonaws.com/jenkins:1.0",
            "PortMappings": [
              {
                "ContainerPort": 8080
              }
            ],
            "Environment": [
              {
                "Name": "JAVA_OPTS",
                "Value": "-Xms2g -Xmx2g"
              }
            ],
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": [
                  "environment",
                  "Environment",
                  "DownloadlogGroup"
                ],
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "ecs"
              }
            }
          }
        ],
        "Cpu": "2vCPU",
        "ExecutionRoleArn": "ECSRole",
        "Family": "${Environment}-zez-download",
        "Memory": "4GB",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": "ECSRole"
      }
    },
    "AlfrescoDownloadService": {
      "Type": "AWS::ECS::Service",
      "DependsOn": "DownloadListenerRuleInternal",
      "Properties": {
        "ServiceName": "${Environment}-alfresco-download",
        "Cluster": "ECSCLUSTER",
        "LaunchType": "FARGATE",
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100
        },
        "DesiredCount": 0,
        "HealthCheckGracePeriodSeconds": 60,
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "SecurityGroups": [
              "Port443SG",
              "Port8080SG",
              "Port8090SG",
              "Port7180SG"
            ],
            "Subnets": [
              [
                "environment",
                "Environment",
                "VPCSubnet1"
              ],
              [
                "environment",
                "Environment",
                "VPCSubnet2"
              ]
            ]
          }
        },
        "TaskDefinition": "AlfrescoDownloadTaskDefinition",
        "LoadBalancers": [
          {
            "ContainerName": "${Environment}-zez-download",
            "ContainerPort": 8080,
            "TargetGroupArn": "DownloadTargetGroup"
          }
        ]
      }
    },
    "AlfrescoPdftronClientTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Name": "${Environment}-zez-pdftronclient",
            "Image": "187212085277.dkr.ecr.us-east-1.amazonaws.com/jenkins:1.0",
            "PortMappings": [
              {
                "ContainerPort": 8080
              }
            ],
            "Environment": [
              {
                "Name": "JAVA_OPTS",
                "Value": "-Xms2g -Xmx2g"
              }
            ],
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": [
                  "environment",
                  "Environment",
                  "PdftronclientlogGroup"
                ],
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "ecs"
              }
            }
          }
        ],
        "Cpu": "1vCPU",
        "ExecutionRoleArn": "ECSRole",
        "Family": "${Environment}-zez-pdftronclient",
        "Memory": "2GB",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": "ECSRole"
      }
    },
    "AlfrescoPdftronClientService": {
      "Type": "AWS::ECS::Service",
      "DependsOn": "TronWebServerListenerRule",
      "Properties": {
        "ServiceName": "${Environment}-alfresco-pdftronclient",
        "Cluster": "ECSCLUSTER",
        "LaunchType": "FARGATE",
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100
        },
        "DesiredCount": 0,
        "HealthCheckGracePeriodSeconds": 60,
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "SecurityGroups": [
              "Port443SG",
              "Port8080SG",
              "Port8090SG",
              "Port7180SG"
            ],
            "Subnets": [
              [
                "environment",
                "Environment",
                "VPCSubnet1"
              ],
              [
                "environment",
                "Environment",
                "VPCSubnet2"
              ]
            ]
          }
        },
        "TaskDefinition": "AlfrescoPdftronClientTaskDefinition",
        "LoadBalancers": [
          {
            "ContainerName": "${Environment}-zez-pdftronclient",
            "ContainerPort": 8080,
            "TargetGroupArn": "PDFTronClientTargetGroup"
          }
        ]
      }
    },
    "AlfrescoPdftronServerTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Name": "${Environment}-zez-pdftronserver",
            "Image": "187212085277.dkr.ecr.us-east-1.amazonaws.com/jenkins:1.0",
            "PortMappings": [
              {
                "ContainerPort": 8090
              }
            ],
            "Environment": [
              {
                "Name": "JAVA_OPTS",
                "Value": "!Sub ${Name} External application load balancer rejected connections because the load balancer had reached its maximum number of connections"
              }
            ],
            "Memory": 16000,
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": [
                  "environment",
                  "Environment",
                  "PdftronserverlogGroup"
                ],
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "ecs"
              }
            }
          }
        ],
        "Family": "${Environment}-zez-pdftronserver",
        "NetworkMode": "host",
        "RequiresCompatibilities": [
          "EC2"
        ]
      }
    },
    "AlfrescoPdftronServerService": {
      "Type": "AWS::ECS::Service",
      "DependsOn": "DataListenerRule",
      "Properties": {
        "ServiceName": "${Environment}-alfresco-pdftronserver",
        "Cluster": "ECSCLUSTER",
        "LaunchType": "EC2",
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100
        },
        "DesiredCount": 0,
        "HealthCheckGracePeriodSeconds": 60,
        "TaskDefinition": "AlfrescoPdftronServerTaskDefinition",
        "LoadBalancers": [
          {
            "ContainerName": "${Environment}-zez-pdftronserver",
            "ContainerPort": 8090,
            "TargetGroupArn": "PDFTronServerTargetGroup"
          }
        ]
      }
    },
    "EC2Instance1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": "ami-0756fbca465a59a30",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2",
              "DeleteOnTermination": true
            }
          }
        ],
        "KeyName": "docker",
        "SecurityGroupIds": [
          "Port443SG",
          "Port8080SG",
          "Port8090SG",
          "Port7180SG",
          "Port22SG"
        ],
        "InstanceType": "t2.micro",
        "IamInstanceProfile": "ecs-role",
        "SubnetId": [
          "environment",
          "Environment",
          "VPCSubnet1"
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "${Environment}-alfresco-1"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nyum install docker -y\nservice docker start\nmkdir -p /etc/ecs && touch /etc/ecs/ecs.config\nmkdir -p /var/log/ecs && mkdir -p /var/lib/ecs/data\necho ECS_CLUSTER=!Sub ${Environment}-alfresco-zez >> /etc/ecs/ecs.config\necho ECS_DATADIR=/data >> /etc/ecs/ecs.config\necho ECS_ENABLE_TASK_IAM_ROLE=true >> /etc/ecs/ecs.config\necho ECS_ENABLE_TASK_IAM_ROLE_NETWORK_HOST=true >> /etc/ecs/ecs.config\necho ECS_LOGFILE=/log/ecs-agent.log >> /etc/ecs/ecs.config\necho ECS_AVAILABLE_LOGGING_DRIVERS=[\"json-file\",\"awslogs\"] >> /etc/ecs/ecs.config\necho ECS_LOGLEVEL=info >> /etc/ecs/ecs.config\ndocker run --name ecs-agent --detach=true --restart=on-failure:10 --volume=/var/run:/var/run --volume=/var/log/ecs/:/log --volume=/var/lib/ecs/data:/data --volume=/etc/ecs:/etc/ecs --net=host --env-file=/etc/ecs/ecs.config amazon/amazon-ecs-agent:latest\n"
        }
      }
    },
    "EC2Instance2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": "ami-0756fbca465a59a30",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2",
              "DeleteOnTermination": true
            }
          }
        ],
        "KeyName": "docker",
        "SecurityGroupIds": [
          "Port443SG",
          "Port8080SG",
          "Port8090SG",
          "Port7180SG",
          "Port22SG"
        ],
        "InstanceType": "t2.micro",
        "IamInstanceProfile": "ecs-role",
        "SubnetId": [
          "environment",
          "Environment",
          "VPCSubnet2"
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "${Environment}-alfresco-2"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nyum install docker -y\nservice docker start\nmkdir -p /etc/ecs && touch /etc/ecs/ecs.config\nmkdir -p /var/log/ecs && mkdir -p /var/lib/ecs/data\necho ECS_CLUSTER=!Sub ${Environment}-alfresco-zez >> /etc/ecs/ecs.config\necho ECS_DATADIR=/data >> /etc/ecs/ecs.config\necho ECS_ENABLE_TASK_IAM_ROLE=true >> /etc/ecs/ecs.config\necho ECS_ENABLE_TASK_IAM_ROLE_NETWORK_HOST=true >> /etc/ecs/ecs.config\necho ECS_LOGFILE=/log/ecs-agent.log >> /etc/ecs/ecs.config\necho ECS_AVAILABLE_LOGGING_DRIVERS=[\"json-file\",\"awslogs\"] >> /etc/ecs/ecs.config\necho ECS_LOGLEVEL=info >> /etc/ecs/ecs.config\ndocker run --name ecs-agent --detach=true --restart=on-failure:10 --volume=/var/run:/var/run --volume=/var/log/ecs/:/log --volume=/var/lib/ecs/data:/data --volume=/etc/ecs:/etc/ecs --net=host --env-file=/etc/ecs/ecs.config amazon/amazon-ecs-agent:latest\n"
        }
      }
    },
    "EC2Instance3": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": "ami-0756fbca465a59a30",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2",
              "DeleteOnTermination": true
            }
          }
        ],
        "KeyName": "docker",
        "SecurityGroupIds": [
          "Port443SG",
          "Port8080SG",
          "Port8090SG",
          "Port7180SG",
          "Port22SG"
        ],
        "InstanceType": "t2.micro",
        "IamInstanceProfile": "ecs-role",
        "SubnetId": [
          "environment",
          "Environment",
          "VPCSubnet1"
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "${Environment}-pdftronserver-1"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nyum install docker -y\nservice docker start\nmkdir -p /etc/ecs && touch /etc/ecs/ecs.config\nmkdir -p /var/log/ecs && mkdir -p /var/lib/ecs/data\necho ECS_CLUSTER=!Sub ${Environment}-alfresco-zez >> /etc/ecs/ecs.config\necho ECS_DATADIR=/data >> /etc/ecs/ecs.config\necho ECS_ENABLE_TASK_IAM_ROLE=true >> /etc/ecs/ecs.config\necho ECS_ENABLE_TASK_IAM_ROLE_NETWORK_HOST=true >> /etc/ecs/ecs.config\necho ECS_LOGFILE=/log/ecs-agent.log >> /etc/ecs/ecs.config\necho ECS_AVAILABLE_LOGGING_DRIVERS=[\"json-file\",\"awslogs\"] >> /etc/ecs/ecs.config\necho ECS_LOGLEVEL=info >> /etc/ecs/ecs.config\ndocker run --name ecs-agent --detach=true --restart=on-failure:10 --volume=/var/run:/var/run --volume=/var/log/ecs/:/log --volume=/var/lib/ecs/data:/data --volume=/etc/ecs:/etc/ecs --net=host --env-file=/etc/ecs/ecs.config amazon/amazon-ecs-agent:latest\n"
        }
      }
    },
    "EC2Instance4": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": "ami-0756fbca465a59a30",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2",
              "DeleteOnTermination": true
            }
          }
        ],
        "KeyName": "docker",
        "SecurityGroupIds": [
          "Port443SG",
          "Port8080SG",
          "Port8090SG",
          "Port7180SG",
          "Port22SG"
        ],
        "InstanceType": "t2.micro",
        "IamInstanceProfile": "ecs-role",
        "SubnetId": [
          "environment",
          "Environment",
          "VPCSubnet2"
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "${Environment}-pdftronserver-2"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nyum install docker -y\nservice docker start\nmkdir -p /etc/ecs && touch /etc/ecs/ecs.config\nmkdir -p /var/log/ecs && mkdir -p /var/lib/ecs/data\necho ECS_CLUSTER=!Sub ${Environment}-alfresco-zez >> /etc/ecs/ecs.config\necho ECS_DATADIR=/data >> /etc/ecs/ecs.config\necho ECS_ENABLE_TASK_IAM_ROLE=true >> /etc/ecs/ecs.config\necho ECS_ENABLE_TASK_IAM_ROLE_NETWORK_HOST=true >> /etc/ecs/ecs.config\necho ECS_LOGFILE=/log/ecs-agent.log >> /etc/ecs/ecs.config\necho ECS_AVAILABLE_LOGGING_DRIVERS=[\"json-file\",\"awslogs\"] >> /etc/ecs/ecs.config\necho ECS_LOGLEVEL=info >> /etc/ecs/ecs.config\ndocker run --name ecs-agent --detach=true --restart=on-failure:10 --volume=/var/run:/var/run --volume=/var/log/ecs/:/log --volume=/var/lib/ecs/data:/data --volume=/etc/ecs:/etc/ecs --net=host --env-file=/etc/ecs/ecs.config amazon/amazon-ecs-agent:latest\n"
        }
      }
    }
  }
}
